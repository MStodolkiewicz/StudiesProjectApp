<?php

namespace App\Admin;

use App\Entity\Category;
use App\Entity\SubCategory;
use App\Entity\User;
use Sonata\AdminBundle\Admin\AbstractAdmin;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Sonata\AdminBundle\Form\Type\ModelType;
use Sonata\AdminBundle\Show\ShowMapper;
use Sonata\Form\Type\BooleanType;
use Sonata\Form\Type\CollectionType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
use Symfony\Contracts\Translation\TranslatorInterface;

class UserAdmin extends AbstractAdmin
{
    private $translator;
    /**
     * @var UserPasswordHasherInterface
     */
    private $userPasswordHasher;

    public function __construct(string $code, string $class, string $baseControllerName, TranslatorInterface $translator,UserPasswordHasherInterface $userPasswordHasher)
    {
        parent::__construct($code, $class, $baseControllerName);
        $this->translator = $translator;
        $this->userPasswordHasher = $userPasswordHasher;
    }

    private $fieldsArray = ['id', 'uuid', 'email', 'username','password','isVerified', 'roles', 'height', 'weight', 'birthDate', 'createdAt'];
    /**
     * @param User $object
     */
    protected function preUpdate(object $object): void
    {
        if($object->getPassword()){
            $object->setPassword($this->userPasswordHasher->hashPassword($object,$object->getPlainPassword()));
        }

        parent::preUpdate($object); // TODO: Change the autogenerated stub
    }

    protected function configureFormFields(FormMapper $form): void
    {
        $form->with($this->translator->trans('user.content', [], 'translations'))
            ->add('email', EmailType::class)
            ->add('username', TextType::class)
            ->add('plainPassword', PasswordType::class,['label' => 'Password','required' => false])
            ->add('isVerified', BooleanType::class,['label' => 'isVerified'])
            ->add('rolesAsString',TextType::class,['label'=>'Roles'])
            ->add('createdAt', DateTimeType::class, [
                'input' => 'datetime_immutable'
            ])->end();

//        $form->with($this->translator->trans('user.meta', [], 'translations'))
//            ->end();
    }

    protected function configureDatagridFilters(DatagridMapper $datagrid): void
    {
        foreach ($this->fieldsArray as $field) {
            $datagrid->add($field);
        }
    }

    protected function configureListFields(ListMapper $list): void
    {
        foreach ($this->fieldsArray as $field) {
            $list->addIdentifier($field);
        }
    }

    protected function configureShowFields(ShowMapper $show): void
    {
        foreach ($this->fieldsArray as $field) {
            $show->add($field);
        }
    }

    /**
     * @param object $object
     * @return string
     */
    public function toString(object $object): string
    {
        return $object instanceof User
            ? $object->getEmail()
            : 'User';
    }



    public function configureDashboardActions(array $actions): array
    {
        return parent::configureDashboardActions($actions); // TODO: Change the autogenerated stub
    }
}